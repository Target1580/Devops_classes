>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> why Need version control? <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  - Used for the collaboration to the team.
  - we are used for storing version
  - Figuring out what happened among the team members
  - Backup
  - Version control helps the teams to solve these kinds of problems, by tracking every individual change by each contributor and helps prevent concurrent work from conflicting.
  - A version control software supports a developer's preferred workflow without imposing one way of working.


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> What is version control <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


Version Control is a system that documents changes made to a file or a set of files. It allows multiple users to
manage multiple revisions of the same unit of information. It is a snapshot of your project over time.



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Version Control Types <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Local Version Control (LVC)

   -  The practice of having the Version Database in the local
      computer
  -   Local database keeps a record of the changes made to files
      in version database


Centralized Version Control (CVC)

  -  Local Version Control's issues are resolved by Centralized Version Control
  -  In CVC, a central repository is maintained where all the versioned files are kept  
  -  Now users can checkout, and check-in files from their different computers at any time

  Centralized Version Control: Issue
    -  Issue: In case of central server failure whole system goes down
    -  Solution: Distributed Version Control
  ex: SVN

Distributed Version Control

  - Version Database is stored at every users' local system and at the remote server
  -  Users modification the local files and then upload the changes to the remote server
  -  If any of the servers die, a client server can be used to restore

ex: git, github, gitbuket, Azure repository, aws commite.


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> why Git is a clear Winner? <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


Snapshots
  -  Git records changes made to a file rather than file itself. That means if a file isn't changed it isn't stored again.

Fast Operations
  -  Almost every operation on git is local, hence the speed offered by Git is lightning fast compared to other VCS's.

Distributed
  -  Every user has his own copy of the repository data stored locally allowing full functionality even on disconnection.

Branch Handling
  -  Every collaborator's working directory is in itself a branch. Different branches can be merged with ease.

Integrity
  -  Check-sum before storing ensures that you can't make any changes to anything without Git recording that change.

Robust
  -  Nearly every task in Git is undoable and it is really hard to lose any change or data in Git.


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Questions <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



Q  how to find file and open it in Linux?
Ans: find command use for finding file and vi editor command is use for  open file we can use cat  that cat help to displai data on screen not going inside 

Q  how can we use github in secure way?
Ans: There are two ways one way is ssh and other one is PAT(personal access token)

 Q. how we can managefile and folder permission using numbering and alphabatic?

Ans :
1) Alphabetic Method:
  Use chmod with letters to modify permissions:
  u (user), g (group), o (others), a (all)
  Add (+), remove (-), or set (=) permissions: r (read), w (write), x (execute). 

2)Numeric Method:
  Represent permissions as three octal digits (user, group, others):
  4 = read, 2 = write, 1 = execute
  Add values for combined permissions: 7 = rwx, 6 = rw-, etc.


  Q.  How many public and private  repository we can create in  github?
ANS: 
    -  Public Repositories: Unlimited for all GitHub users.
    -  Private Repositories:
        Unlimited for free accounts, but they may have some restrictions (e.g., collaborators).
        Advanced features for private repositories are available in paid plans.











  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Daily commands <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. clear - Clears the terminal screen.  

2. mv  
  - mv source destination - Moves or renames files.  
3. cp  
  - cp source destination - Copies files.  
- rm  
  - rm file_name - Removes a file.  
  - rm -rf dir_name - Removes a directory and its contents recursively.  
- vi  
  - i - Enter insert mode.  
  - q - Quit without saving.  
  - wq - Write (save) and quit.  
  - w! - Force write to a file.

 
- whoami - Prints the current username.  
- top - Displays a dynamic list of running processes.  
- lscpu - Displays CPU architecture information.  
- lsblk - Lists information about block devices.  
- cat /proc/cpuinfo - Displays CPU details.  
- lshw - Displays detailed hardware information.


 
- sudo su - Switches to the superuser.  
- cd  
  - cd ~ - Navigates to the home directory.  
  - cd .. - Moves one directory up.  
  - cd / - Navigates to the root directory.  
  - cd dir1/dir2/dir3 - Navigates through multiple directories.

 
- mkdir  
  - mkdir -p - Creates directories, including parent directories if needed.  

- touch - Creates an empty file.  

- ls  
  - ls -l - Lists files with detailed info.  
  - ls -la - Lists all files, including hidden ones, with details.  
  - ls -a - Lists all files, including hidden ones. 

- pwd - Prints the current working directory.  

- cat  
  - cat file_name - Displays the content of a file.  
  - cat -n file_name - Shows line numbers while displaying the content.  
  - cat > new_file_name - Creates a new file and writes to it.  
  - cat file1 >> file2 - Appends content of file1 to file2.  



- tree: Displays directory structure in a tree-like format.  
  Example: tree -L 2 (shows directories up to 2 levels).

- head: Shows the first 10 lines of a file.  
  Example: head -n 5 file.txt (shows first 5 lines).

- less: Opens a file for scrollable viewing.  
  Example: less file.txt (Space to scroll, q to quit).

- tail: Shows the last 10 lines of a file.  
  Example: tail -n 5 file.txt (shows last 5 lines).  


 - df   : Displays the disk space usage on file systems.
 - df -h : Displays disk space usage in human-readable format
 - useradd -m username  : Creates a user with a home directory.
 - passwd username  - To add a password for a user in Linux, use the passwd command
 - groupadd groupname : Adds a new group to the system.
 - usermod -aG groupname username :Adds a user to a group.



Today 4-12-2024
 - gpasswd groupname : Sets or updates the password for a group.
- groupdel groupname : This removes the group.
- userdel -r tanmay : This removes the user tanmay and deletes their home directory
- cat /etc/passwd : Lists all users on the system.
- cat /etc/group : Lists all groups on the system
